rm(list=ls())

library(ggplot2)

Root <- "C:/Users/?/Downloads"  # Replace "?" with your username
PathIn <- file.path(Root, "ECO", "Project3")

load( file=file.path(PathIn, "CPS_Data_Homework3.RData") ) # Object is named CPS

View( CPS )

load( file=file.path(PathIn, "CPS_Codebooks_Homework3.RData") )

# Limiting analysis to the people who are currently employed (in March 2021) and who earned positive annual income in the previous year. 
PositiveIncome <- subset(CPS, subset = ( EMPSTAT %in% c(10L,12L) ) & ( INCTOT > 0 )  )

# Initialize new variable to missing 
PositiveIncome$EducLevels <- NA_character_  

# Identify respondents with less than a high school degree:
PositiveIncome$EducLevels <- with(PositiveIncome, 
     ifelse(test = EDUC %in% c(2L, 10L, 20L, 30L, 40L, 50L, 60L, 71L), 
            yes = "LessThan_HS_Grad", no = EducLevels))
# High school diploma (but no further):
PositiveIncome$EducLevels <- with(PositiveIncome, 
     ifelse(EDUC %in% c(73L), "HS_Grad", EducLevels))
# Some college, but less than college graduate:
PositiveIncome$EducLevels <- with(PositiveIncome, 
     ifelse(EDUC %in% c(81L, 91L:92L), "Some_College", EducLevels))
# College graduate:
PositiveIncome$EducLevels <- with(PositiveIncome, 
                                  ifelse(EDUC %in% c(111L), "College_Grad", EducLevels))
# Any post-college education:
PositiveIncome$EducLevels <- with(PositiveIncome, 
                                  ifelse(EDUC %in% c(123L:125L), "Post_College", EducLevels))

# Creating 4 dummy variables for each level of education using the plain character version of the education variable and ifelse() function
PositiveIncome$HS_Grad <-      with(PositiveIncome, 
                                 ifelse(EducLevels=="HS_Grad", 1, 0) )
PositiveIncome$Some_College <- with(PositiveIncome, 
                                 ifelse(EducLevels=="Some_College", 1, 0) )
PositiveIncome$College_Grad <- with(PositiveIncome, 
                                 ifelse(EducLevels=="College_Grad", 1, 0) )
PositiveIncome$Post_College<- with(PositiveIncome, 
                                 ifelse(EducLevels=="Post_College", 1, 0) )

# Creating additional dummy variable for respondent's sex and two variables for respondent's age and age squared
PositiveIncome$respondentSex <- with(PositiveIncome, 
                                     ifelse(SEX_ValueLabel=="Male", 1, 0) ) # Creates respondentSex variable and gives 1 if male and 0 if female based on SEX_ValueLabel
PositiveIncome$respondentAge <- PositiveIncome$AGE # Creates respondentAge variable and assigns the age column from PosiiveIncome to it
PositiveIncome$ageSquared <- (PositiveIncome$AGE)^2 # Creates ageSquared variable and assigns the squared value of the age column from PositiveIncome data frame to it

# Running the regression with new variables
My_OLS <- lm( log(INCTOT) ~ HS_Grad + Some_College + College_Grad + Post_College + respondentSex + ageSquared + respondentAge, 
              data=PositiveIncome)
# Show estimated beta_hat coefficients
My_OLS$coefficients
# Interpret data in terms of plain dollar of income
exp(My_OLS$coefficients)

# Calculating the average fitted value for (log) income for each U.S. state (and the District of Columbia).
length( My_OLS$fitted.values ) 
PositiveIncome$Fitted_Value <- My_OLS$fitted.values # Add the fitted values from the OLS regression as a new variable in the PositiveIncome dataset

SummaryData <- unique( PositiveIncome[, c("STATEFIP", "STATEFIP_ValueLabel")] ) # Creates a data frame of unique STATEFIP and STATEFIP_valueLabel elements
SummaryData$Average_LogIncome <- NA_real_ # Creates a new column called Average_LogIncome and fills it with N/A values

for( I in 1:nrow(SummaryData) ){
  fips <- SummaryData$STATEFIP[I]
  X <- subset(PositiveIncome, subset=(STATEFIP==fips) ) 
  SummaryData$Average_LogIncome[I] <- with(X, mean(Fitted_Value, na.rm=TRUE) )
}

View( SummaryData )

#  reading the US state-boundary shapefile and converting it to an R sf-format spatial data.frame. 
ZippedFile <- list.files( PathIn, full.names = TRUE, pattern = "zip$")

file.remove( list.files(PathTemp, full.names=TRUE) )

unzip( ZippedFile, exdir=PathTemp, junkpaths=TRUE)

States <- st_read( dsn=PathTemp )

Merge <- merge(States,SummaryData,by.x="NAME",by.y="STATEFIP_ValueLabel", all.x=TRUE)

mapview(Merge,zcol="Average_LogIncome")

# Calculating the predicted/fitted annual income (in dollars) for a woman aged 25 with a college degree.
Dollar<- exp(predict(My_OLS,data.frame(HS_Grad=0,Some_College=0,College_Grad=1,Post_College=0,Female=1,AGE=25,AgeSquared=625)))
print(Dollar)
# Calculating the predicted/fitted annual income (in dollars) for a man aged 40 with a high school degree.
Dollar2 <- exp(predict(My_OLS,data.frame(HS_Grad=1,Some_College=0,College_Grad=0,Post_College=0,Female=0,AGE=40,AgeSquared=1600)))
print(Dollar2)

# Creating a line graph with the respondentâ€™s age on the horizontal axis and the
# median of actual annual income (in log form) taken from the Current Population Survey. Graph is limited from ages 20 - 70. 
# Create a second line to this graph with age on the horizontal axis and on the vertical
# axis, put the median of predicted/fitted log income derived from the OLS regression

PositiveDT <- setDT( PositiveIncome )
AgeSummaryDT <- PositiveDT[, 
                             list(LogActual = median( log(INCTOT) ), 
                                  LogPredicted = median( Fitted_Value) ), 
                             by=AGE]
setkeyv(AgeSummaryDT, cols="AGE")
View(AgeSummaryDT)

AgeDTSubset <- subset(AgeSummaryDT, subset=(AGE >= 20) & (AGE <= 70) )

G <- ggplot(data = AgeDTSubset) + geom_point( aes(x=AgeDTSubset$AGE, y=AgeDTSubset$LogActual), color="dodgerblue") +
  labs(x="Age", y="Log of Income") + geom_point( aes(x=AgeDTSubset$AGE, y=AgeDTSubset$LogPredicted), color="red") +
  labs(x="Age", y="Log of Income") + theme_bw()
print(G) # Red dots are predicted income and blue dots are actual income
ggsave(path=PathOut,filename="plot.png",plot=G)

