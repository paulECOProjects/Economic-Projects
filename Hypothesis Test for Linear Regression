rm(list=ls())

library(data.table)
library(ggplot2)
Root <- "C:/Users/?/Downloads" # replace "?" with username

PathIn <- file.path(Root, "ECO 322", "HW 5")

load( file=file.path(PathIn, "CPS_Data_Homework5.RData") ) # Object is named CPS

# creating new variable for categories of completed schooling
CPS$EducLevels <- NA_character_  
# Identify respondents with less than a high school degree:
CPS$EducLevels <- with(CPS, 
     ifelse(test = EDUC %in% c(2L, 10L, 20L, 30L, 40L, 50L, 60L, 71L), 
            yes = "LessThan_HS_Grad", no = EducLevels))
# High school diploma (but no further):
CPS$EducLevels <- with(CPS, 
     ifelse(EDUC %in% c(73L), "HS_Grad", EducLevels))
# Some college, but less than college graduate:
CPS$EducLevels <- with(CPS, 
     ifelse(EDUC %in% c(81L, 91L:92L), "Some_College", EducLevels))
# College graduate:
CPS$EducLevels <- with(CPS, 
                                  ifelse(EDUC %in% c(111L), "College_Grad", EducLevels))
# Any post-college education:
CPS$EducLevels <- with(CPS, 
                                  ifelse(EDUC %in% c(123L:125L), "Post_College", EducLevels))

# create 4 dummy variables for the 5 categories of education 
CPS$HS_Grad <-      with(CPS, ifelse(EducLevels=="HS_Grad", 1L, 0L) )
CPS$Some_College <- with(CPS, ifelse(EducLevels=="Some_College", 1L, 0L) )
CPS$College_Grad <- with(CPS, ifelse(EducLevels=="College_Grad", 1L, 0L) )
CPS$Post_College <- with(CPS, ifelse(EducLevels=="Post_College", 1L, 0L) )

# dummy variable for Female
CPS$Female <- with(CPS, ifelse(SEX==2L, 1L, 0L) )
# adding AgeSquared
CPS$AgeSquared <- with(CPS, AGE^2 )

HasIncome <- subset(CPS, subset=((AGE >= 25 & AGE <= 65) & (INCTOT > 0))) # Creates a subset of data using subset() function on the CPS object. The subset contains respondents from age 25 to 65 and with a positive annual income

HasIncome$AGE_Some_College <- with(HasIncome, 
                                   ifelse(EducLevels=="Some_College", AGE, 0) ) # If respondent's educational level is "Some_College" input the AGE into AGE_Some_College column
HasIncome$AGE_College_Grad <- with(HasIncome, 
                                   ifelse(EducLevels=="College_Grad", AGE, 0) ) # If respondent's educational level is "College_Grad" input the AGE into AGE_College_Grad column
HasIncome$AGE_Post_College <- with(HasIncome, 
                                   ifelse(EducLevels=="Post_College", AGE, 0) ) # If respondent's educational level is "Post_College" input the AGE into AGE_Post_College column

# run the regression with new variables and store it into My_OLS
My_OLS <- lm( log(INCTOT) ~ HS_Grad + Some_College + College_Grad + Post_College + 
                Female + AGE + AgeSquared + 
                AGE_Some_College + AGE_College_Grad + AGE_Post_College, 
              data=HasIncome)

summary(My_OLS)

# testing null hypothesis that the true parameter on AGE_Some_College equals the true parameter on AGE_College_Grad

Var_beta_hat <- vcov( My_OLS ) 

TestVector <- c(0.0,0.0, 0.0,0.0,0.0, 0.0,0.0,0.0, 1.0 , -1.0, 0.0) 
TestScalar <- 0            

Test_numerator <- TestVector %*% My_OLS$coefficients - TestScalar
Test_denominator <- sqrt( (TestVector %*% Var_beta_hat) %*% TestVector )
TestStatistic <- Test_numerator/Test_denominator 

print(TestStatistic)

pnorm(TestStatistic, lower.tail=FALSE) 

Analysis <- subset(CPS, subset=AGE >= 25 & AGE <= 65 & EMPSTAT %in% c(10L, 12L) & INCTOT > 0)
with(Analysis, summary(INCTOT))                  # No missing values
with(Analysis, table(EducLevels, useNA="ifany")) # No missing values

setDT( Analysis ) # Creates data.table

Percentiles <- Analysis[, quantile(AGE  ) ] # Finds the 25th, 50th, and 75th percentiles of the AGE variable in the Analysis subset
print( Percentiles ) # Prints out the percentiles of the AGE variable from the Analysis subset

Analysis[, S25 := ifelse( AGE <= quantile(AGE,.25) , 1,0 ) ] # If the age is in the 25th percentile, enter 1 into S25
Analysis[, S50 := ifelse( AGE <= quantile(AGE,.50), 1,0) ] # If the age is in the 50th percentile, enter 1 into S50
Analysis[, S75 := ifelse( AGE <= quantile(AGE,.75), 1,0) ] # If the age is in the 75th percentile, enter 1 into S75

# run regression with new spline variables (S25, S50, S75)
My_OLS <- lm( log(INCTOT) ~ AGE + S25 + S50 + S75, data=Analysis)
summary(My_OLS)

Coeffs <- My_OLS$coefficients
print( Coeffs )
print( Percentiles )

# estimated slope of the relationship between age and the log of income at age 36
personA <- predict(My_OLS, data.frame(AGE = 36, S25 = 0, S50 = 1, S75 = 1)) - 10.10085766 # Estimates the slope at age 36
print(personA)

# estimated slope at age 48
personB <- predict(My_OLS, data.frame(AGE = 48, S25 = 0, S50 = 0, S75 = 1)) - 10.10085766 # Estimates the slope at age 48
print(personB)

# create a graph that depicts the relationship between AGE and the predicted value of log(INCTOT) based on the spline
# add an additional line to that graph with the average value of log(INCTOT) by AGE
Analysis[, PredictedIncome := My_OLS$fitted.values]

SummaryDT <- Analysis[, list(Predicted = mean(PredictedIncome), 
                             Actual = mean( log(INCTOT) ) ), by=list(AGE)][order(AGE)]
View( SummaryDT )

G <- ggplot(data=SummaryDT) + geom_line( aes(x=AGE, y=Predicted), color="dodgerblue", linewidth=1.5) +
  geom_line( aes(x=AGE, y=Actual), color="red", linewidth=1.5) +
  labs(y="Log Income", x="Age") +
  theme_bw() # Plots a line graph of actual and predicted log income against age
print(G)
